swagger: '2.0'
info:
  description: 测试Swagger功能
  version: 1.0.0
  title: 测试Swagger功能 
schemes:
  - http  
basePath: ""
#认证
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "token"
    in: "header"

#定义接口数据
paths:
  /api/captcha:
    get:
      tags:
        - 用户登录
      summary: 获取验证码
      produces:
        - application/json
      responses:
        200:
           $ref: '#/responses/Result'
  /api/login:
    post:
      tags:
        - 用户登录
      summary: 登录
      produces:
        - application/json
      parameters:
        - name: username
          description: 用户名
          in: query
          type: string
          required: true
        - name: password
          description: 密码
          in: query
          type: string
          required: true
        - name: captcha
          description: 验证码
          in: query
          type: string
          required: true
      responses:
        200:
           $ref: '#/responses/Result'     


  /api/user/list:
    get:
      tags:
        - 用户管理
      summary: 用户列表
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/pageNo'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/name'
        - $ref: '#/parameters/startTime'
        - $ref: '#/parameters/endTime'
      responses:
        200:
           $ref: '#/responses/responseEntity'
  /api/user/info/{id}:
    get:
      tags:
        - 用户管理
      summary: 用户详情
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
           $ref: '#/responses/responseEntity'
  /api/user/save:
    post:
      tags:
        - 用户管理
      summary: 用户添加
      produces:
        - application/json
      parameters:
        - name: body
          description: 用户对象
          in: body
          type: string
          schema:
            $ref: '#/definitions/UserEntity'
          required: true
      responses:
        200:
           $ref: '#/responses/responseEntity'
  /api/user/update:
    post:
      tags:
        - 用户管理
      summary: 用户修改
      produces:
        - application/json
      parameters:
        - name: body
          description: 用户对象
          in: body
          type: string
          schema:
            $ref: '#/definitions/UserEntity'
          required: true
      responses:
        200:
           $ref: '#/responses/responseEntity'
  /api/user/delete/{id}:
    delete:
      tags:
        - 用户管理
      summary: 用户详情
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
           $ref: '#/responses/responseEntity'      
   
            
#定义数据模型
definitions:
  # 返回值对象主体
  Result:
      type: object
      properties:
        code:
          description: 成功状态码
          type: integer 
          format: int32
          required: true
        data:
          description: 数据对象    
          type: object
          required: true    
        msg:
          description: 失败原因
          type: string
  # 实体对象主体                    
  UserEntity:
    type: object
    properties:
      id:
        description: 用户ID
        type: integer
        format: int64
      username:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
      gmtCreate:
        description: 创建时间
        type: string
        format: date-time
 




# 参数模型
parameters:         
  pageNo:
    name: pageNo
    in: query 
    description: 页数
    type: integer
  pageSize:
    name: pageSize
    in: query
    description: 每页大小
    type: integer
  id:
    name: id
    in: path
    description: 主体id
    type: integer
  name:
    name: name
    in: query
    description: 主体名称
    type: string   
  startTime:
    name: startTime
    in: query
    description: 开始时间
    type: string    
  endTime:
    name: endTime
    in: query
    description: 结束时间
    type: string  
    
# 响应主体  
responses:
  responseEntity:
     description: 成功响应主体        
     schema:
       $ref: '#/definitions/Result'       
        